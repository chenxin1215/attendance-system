<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attendance.dao.LogConfigureInfoMapper">
  <resultMap id="BaseResultMap" type="com.attendance.entity.LogConfigureInfo">
    <id column="log_configure_info_log_id" jdbcType="BIGINT" property="logId" />
    <result column="log_configure_info_employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="log_configure_info_employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="log_configure_info_content" jdbcType="VARCHAR" property="content" />
    <result column="log_configure_info_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="log_configure_info_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    log_configure_info.log_id as log_configure_info_log_id, log_configure_info.employee_id as log_configure_info_employee_id, 
    log_configure_info.employee_name as log_configure_info_employee_name, log_configure_info.content as log_configure_info_content, 
    log_configure_info.create_time as log_configure_info_create_time, log_configure_info.update_time as log_configure_info_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_configure_info log_configure_info
    where log_configure_info.log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from log_configure_info
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.attendance.entity.LogConfigureInfo">
    insert into log_configure_info (log_id, employee_id, employee_name, 
      content, create_time, update_time
      )
    values (#{logId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.attendance.entity.LogConfigureInfo">
    insert into log_configure_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.attendance.entity.LogConfigureInfo">
    update log_configure_info
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.attendance.entity.LogConfigureInfo">
    update log_configure_info
    set employee_id = #{employeeId,jdbcType=BIGINT},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>