<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attendance.dao.ConfigureInfoMapper">
  <resultMap id="BaseResultMap" type="com.attendance.entity.ConfigureInfo">
    <id column="configure_info_id" jdbcType="BIGINT" property="id" />
    <result column="configure_info_work_hours" jdbcType="TIME" property="workHours" />
    <result column="configure_info_ow_hours" jdbcType="TIME" property="owHours" />
    <result column="configure_info_day_worktime" jdbcType="INTEGER" property="dayWorktime" />
    <result column="configure_info_break_type" jdbcType="INTEGER" property="breakType" />
    <result column="configure_info_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="configure_info_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    configure_info.id as configure_info_id, configure_info.work_hours as configure_info_work_hours, 
    configure_info.ow_hours as configure_info_ow_hours, configure_info.day_worktime as configure_info_day_worktime, 
    configure_info.break_type as configure_info_break_type, configure_info.create_time as configure_info_create_time, 
    configure_info.update_time as configure_info_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from configure_info configure_info
    where configure_info.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from configure_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.attendance.entity.ConfigureInfo">
    insert into configure_info (id, work_hours, ow_hours, 
      day_worktime, break_type, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{workHours,jdbcType=TIME}, #{owHours,jdbcType=TIME}, 
      #{dayWorktime,jdbcType=INTEGER}, #{breakType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.attendance.entity.ConfigureInfo">
    insert into configure_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workHours != null">
        work_hours,
      </if>
      <if test="owHours != null">
        ow_hours,
      </if>
      <if test="dayWorktime != null">
        day_worktime,
      </if>
      <if test="breakType != null">
        break_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="workHours != null">
        #{workHours,jdbcType=TIME},
      </if>
      <if test="owHours != null">
        #{owHours,jdbcType=TIME},
      </if>
      <if test="dayWorktime != null">
        #{dayWorktime,jdbcType=INTEGER},
      </if>
      <if test="breakType != null">
        #{breakType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.attendance.entity.ConfigureInfo">
    update configure_info
    <set>
      <if test="workHours != null">
        work_hours = #{workHours,jdbcType=TIME},
      </if>
      <if test="owHours != null">
        ow_hours = #{owHours,jdbcType=TIME},
      </if>
      <if test="dayWorktime != null">
        day_worktime = #{dayWorktime,jdbcType=INTEGER},
      </if>
      <if test="breakType != null">
        break_type = #{breakType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.attendance.entity.ConfigureInfo">
    update configure_info
    set work_hours = #{workHours,jdbcType=TIME},
      ow_hours = #{owHours,jdbcType=TIME},
      day_worktime = #{dayWorktime,jdbcType=INTEGER},
      break_type = #{breakType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>